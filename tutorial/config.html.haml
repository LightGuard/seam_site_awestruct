---
layout: base
title: Getting Started With Seam 3 using the Confbuzz Example -- Config
---
:markdown
  ## [Setup](id:setup)
  Add this to pom.xml:
%pre(class='syntax xml')
  :escaped
    <dependency>
        <groupId>org.jboss.seam.config</groupId>
        <artifactId>seam-config-xml</artifactId>
    </dependency>
:markdown
  Seam Config XML obviously requires an XML file in the project. Place a file
  named seam-beans.xml in src/main/resources/meta-inf. seam config is a powerful
  mechanism for configuring, altering, and enhancing cdi beans. it is also the
  preferred method for configuring seam security identity stores, and can be
  used to expose beans within non cdi containers (jars which have no beans.xml).

  ## [seam-beans.xml](xml)
  The file below configures security settings for the Confbuzz application:
%pre(class='syntax xml')
  :escaped
    <?xml version="1.0" encoding="UTF-8"?>
    <beans xmlns="http://java.sun.com/xml/ns/javaee"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:s="urn:java:ee"
           xmlns:sec="urn:java:org.jboss.seam.security.permission:org.jboss.seam.security.management.picketlink"
           xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://jboss.org/schema/cdi/beans_1_0.xsd">

        <sec:JpaPermissionStore>
            <s:replaces/>
            <sec:identityPermissionClass>seam.example.confbuzz.model.IdentityPermission</sec:identityPermissionClass>
        </sec:JpaPermissionStore>

        <sec:JpaIdentityStoreConfiguration>
            <s:replaces/>
            <sec:identityClass>seam.example.confbuzz.model.Identity</sec:identityClass>
            <sec:relationshipClass>seam.example.confbuzz.model.IdentityRelationship</sec:relationshipClass>
            <sec:roleTypeClass>seam.example.confbuzz.model.IdentityRole</sec:roleTypeClass>
            <sec:attributeClass>seam.example.confbuzz.model.IdentityAttribute</sec:attributeClass>
        </sec:JpaIdentityStoreConfiguration>

    </beans>
:markdown
  The `JpaPermissionStore` class is used as a base and Seam Config is replacing
  the `identityPermissionClass` with the `IdentityPermission` class in the
  application. Similarly, the `JpaIdentityStoreConfiguration` class is replaced
  to reference classes in the application instead of the defaults.

  If the desired outcome is to modify an existing class with new data, while
  only having one bean installed into the system, use `s:replaces`, otherwise
  make use of `s:modifies` and include additional qualifiers.

  It is possible to modify producers, create virtual producers, configure beans,
  install multiple beans of the same type using different qualifiers, configure
  fields and methods, modifying injection points using Seam Config. An example
  of this would be to configure a persistence unit producer using XML instead of
  a Java class as was done in this example. Please consult the [reference guide](http://docs.jboss.org/seam/3/config/latest/reference/en-US/html/xml- provider.html#d0e566) for more information and examples.
